// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  //url      = env("DATABASE_URL") // can uncomment this to use original DB
  url      = env("KP_DATABASE_URL") // test DB for discovery ticket
  //url      = env("DN_DATABASE_URL") // test DB for discovery ticket
}


// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String  @db.VarChar(255)
  type              String  @db.Text
  provider          String  @db.Text
  providerAccountId String  @db.Text
  refresh_token     String? @db.Text
  access_token      String? @db.VarChar(255)
  expires_at        Int?
  token_type        String? @db.Text
  scope             String? @db.Text
  id_token          String? @db.Text
  session_state     String? @db.Text
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @db.VarChar(255)
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String          @id @default(cuid())
  name              String          @db.VarChar(255)
  email             String          @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  sessions          Session[]
  bulletinBoardPost BulletinBoard[]
}

model VerificationToken {
  identifier String   @db.VarChar(255)
  token      String   @unique
  expires    DateTime @unique

  @@unique([identifier, token])
}

model BulletinBoard {
  id          String @id @default(cuid())
  userId      String @db.VarChar(255)
  description String @unique @db.Text
  owner       User   @relation(fields: [userId], references: [id])
}
